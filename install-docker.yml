---
- name: Install Docker on Ubuntu EC2 instance
  hosts: ec2_instances
  become: true
  vars:
    ansible_ssh_user: ec2-user  # Default user for Ubuntu AMIs
    ansible_ssh_private_key_file: ~/.ssh/RDP_Connect.pem  # Path to your SSH key
    docker_version: latest

  tasks:
    - name: Check if Docker is already installed
      command: dpkg -l | grep docker-ce
      register: docker_check
      changed_when: false
      failed_when: false

    - name: Debug Docker installation status
      debug:
        msg: "Docker CE is {{ 'installed' if docker_check.rc == 0 else 'not installed' }}"

    - name: Update apt package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Install required packages for Docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ ansible_architecture | default('amd64') }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
      when: ansible_os_family == "Debian"

    - name: Update apt package cache after adding Docker repo
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install Docker
      apt:
        name: docker-ce
        state: "{{ docker_version }}"
      when: ansible_os_family == "Debian"
      register: docker_install
      failed_when: docker_install.failed

    - name: Debug Docker installation result
      debug:
        msg: "Docker installation {{ 'succeeded' if docker_install.changed else 'failed or already installed' }}"

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes
      when: ansible_os_family == "Debian" and docker_install.changed

    - name: Add ubuntu user to docker group
      user:
        name: "{{ ansible_ssh_user }}"
        groups: docker
        append: yes
      when: ansible_os_family == "Debian"

    - name: Ensure Docker is running
      command: docker info
      register: docker_info
      changed_when: false
      when: ansible_os_family == "Debian"
